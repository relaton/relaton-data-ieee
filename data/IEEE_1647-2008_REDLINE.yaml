---
schema-version: v1.2.3
id: IEEE1647-2008Redline
title:
- content: IEEE Standard for the Functional Verification Language e
  format: text/plain
  type: title-main
- content: IEEE Standard for the Functional Verification Language e - Redline
  format: text/plain
  type: main
link:
- content: https://ieeexplore.ieee.org/document/5982069
  type: src
type: standard
docid:
- id: IEEE 1647-2008 Redline
  type: IEEE
  primary: true
- id: IEEE 1647â„¢-2008 Redline
  type: IEEE
  scope: trademark
  primary: true
- id: 978-0-7381-6955-2
  type: ISBN
docnumber: IEEE 1647-2008 Redline
date:
- type: created
  value: '2008-08-03'
- type: published
  value: '2019-04-08'
- type: issued
  value: '2008-05-09'
contributor:
- organization:
    name:
    - content: Institute of Electrical and Electronics Engineers
    abbreviation:
      content: IEEE
    url: http://www.ieee.org
    contact:
    - address:
        city: New York
        country: USA
  role:
  - type: publisher
revdate: '2019-04-08'
language:
- en
script:
- Latn
abstract:
- content: The e functional verification language is an application-specific programming
    language, aimed at automating the task of verifying a hardware or software design
    with respect to its specification. Verification environments written in e provide
    a model of the environment in which the design is expected to function, including
    the kinds of erroneous conditions the design needs to withstand. A typical verification
    environment is capable of generating user-controlled test inputs with statistically
    interesting characteristics. Such an environment can check the validity of the
    design responses. Functional coverage metrics are used to control the verification
    effort and gauge the quality of the design. e verification environments can be
    used throughout the design cycle, from a high-level architectural model to a fully
    realized system. A definition of the e language syntax and semantics and how tool
    developers and verification engineers should use them are contained in this standard.
  language:
  - en
  script:
  - Latn
  format: text/plain
copyright:
- owner:
  - name:
    - content: Institute of Electrical and Electronics Engineers
    abbreviation:
      content: IEEE
    url: http://www.ieee.org
  from: '2011'
relation:
- type: updates
  bibitem:
    id: IEEE1647-2006
    docid:
    - id: IEEE 1647-2006
      type: IEEE
      primary: true
    formattedref:
      content: IEEE 1647-2006
      format: text/plain
  description:
    content: revises
    language:
    - en
    script:
    - Latn
    format: text/plain
- type: obsoletedBy
  bibitem:
    id: IEEE1647-2011
    docid:
    - id: IEEE 1647-2011
      type: IEEE
      primary: true
    formattedref:
      content: IEEE 1647-2011
      format: text/plain
keyword:
- content: IEEE standards
- content: Computer languages
- content: Formal verification
- content: Concurrent computing
- content: Dynamic programming
- content: 1647-2008
- content: assertion
- content: concurrent programming
- content: constraint
- content: dynamic verification
- content: functional coverage
- content: functional verification
- content: simulation
- content: temporal logic
- content: test generation
doctype: redline
editorialgroup:
  committee:
  - Design Automation of the IEEE Computer Society
ics:
- code: '35.060'
  text: Languages used in information technology
ext:
  schema-version: v1.0.0
  standard_status: Superseded
  standard_modified: Redline
  pubstatus: Active
  holdstatus: Publish
